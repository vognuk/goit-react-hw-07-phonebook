{"version":3,"sources":["components/Form/Form.module.css","components/Container/index.js","components/Heading/index.jsx","components/NotificationNumberExist/index.jsx","utils/validator.js","redux/contactsSelectors.js","redux/actions.js","redux/contactsOperations.js","components/Form/index.jsx","components/Contacts/index.jsx","components/Filter/index.jsx","App.js","redux/contactsReducer.js","redux/store.js","index.js","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","components/Heading/HeadingAnimation.module.css","components/NotificationNumberExist/NotificationNumberExist.module.css","components/NotificationNumberExist/Animation.module.css","components/Contacts/ContactsAnimation.module.css"],"names":["module","exports","Container","children","className","s","container","Heading","CSSTransition","in","appear","classNames","HeadingAnimation","timeout","unmountOnExit","title","NotificationNumberExist","message","card","validatePhoneNumber","number","validator","isMobilePhone","getAllContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","String","initContactsRequest","createAction","initContactsSuccess","initContactsError","addContactRequest","addContactSuccess","payload","addContactError","delContactRequest","delContactSuccess","delContactError","changeFilter","axios","defaults","baseURL","operations","addContact","contact","dispatch","post","then","data","console","log","catch","error","delContact","id","delete","fetchContacts","get","Form","sameContact","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","some","setTimeout","reset","alert","this","Animation","form","onSubmit","label","star","input","type","placeholder","onChange","required","maxLength","rule","button","disabled","checkContact","Component","connect","selectors","Contacts","onDelete","TransitionGroup","component","list","map","elem","ContactsAnimation","item","onClick","mapDispatchToProps","onFilterChange","action","initialValue","App","filterContacts","initContacts","prevProps","onChangeFilter","createReducer","_","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1f1fba0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"Form_star__o_2Sx\",\"rule\":\"Form_rule__1CkjD\",\"form\":\"Form_form__2eOyZ\",\"label\":\"Form_label__3-qhj\",\"input\":\"Form_input__2CSw6\",\"button\":\"Form_button__28keL\"};","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\n\nexport default Container;\n","import React from \"react\"\nimport { CSSTransition } from 'react-transition-group'\nimport s from './Heading.module.css'\nimport HeadingAnimation from './HeadingAnimation.module.css'\n\nconst Heading = () => {\n    return (<CSSTransition\n        in={true}\n        appear={true}\n        classNames={HeadingAnimation}\n        timeout={500}\n        unmountOnExit\n    >\n        <h1 className={s.title}>Phonebook</h1>\n    </CSSTransition>\n    );\n};\n\nexport default Heading;\n","import React from \"react\"\nimport s from './NotificationNumberExist.module.css'\n\n\nconst NotificationNumberExist = ({ message }) => {\n    return (<p className={s.card}>{message}</p>);\n};\n\nexport default NotificationNumberExist;\n","import validator from 'validator'\n\nconst validatePhoneNumber = number => {\n    const isValidPhoneNumber = validator.isMobilePhone(number, \"uk-UA\");\n    return (isValidPhoneNumber);\n};\n\nexport default validatePhoneNumber;\n","import { createSelector } from '@reduxjs/toolkit'\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContactsLength = state => {\r\n    const allContacts = getAllContacts(state);\r\n    return allContacts.length;\r\n};\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(({ name, number }) =>\r\n            name.toLowerCase().includes(normalizedFilter) ||\r\n            String(number).includes(normalizedFilter)\r\n        );\r\n    },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const initContactsRequest = createAction('app/initStateRequest');\nexport const initContactsSuccess = createAction('app/initStateSuccess');\nexport const initContactsError = createAction('app/initStateError');\n\nexport const addContactRequest = createAction('form/addContactRequest');\nexport const addContactSuccess = createAction('form/addContactSuccess', (payload) => {\n    return {\n        payload,\n    }\n});\nexport const addContactError = createAction('form/addContactError');\n\nexport const delContactRequest = createAction('contact/delContactRequest');\nexport const delContactSuccess = createAction('contact/delContactSuccess');\nexport const delContactError = createAction('contact/delContactError');\nexport const filterContacts = createAction('contact/filterContacts');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios'\r\nimport {\r\n    initContactsRequest,\r\n    initContactsSuccess,\r\n    initContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n} from './actions'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(initContactsRequest());\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(initContactsSuccess(data)))\r\n        .catch(error => dispatch(initContactsError(error)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n    dispatch(addContactRequest());\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => console.log(data) || dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst delContact = id => dispatch => {\r\n    dispatch(delContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(delContactSuccess(id)))\r\n        .catch(error => dispatch(delContactError(error)));\r\n};\r\n\r\nconst operations = {\r\n    addContact,\r\n    delContact,\r\n    fetchContacts,\r\n};\r\n\r\nexport default operations;\r\n","import React, { Component } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport Heading from '../Heading'\nimport NotificationNumberExist from '../NotificationNumberExist'\nimport Animation from '../NotificationNumberExist/Animation.module.css'\nimport s from './Form.module.css'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport validatePhoneNumber from '../../utils/validator'\nimport * as selectors from '../../redux/contactsSelectors'\nimport operations from '../../redux/contactsOperations'\n\nclass Form extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n    onChange: PropTypes.func,\n    onSubmit: PropTypes.func,\n    disabled: PropTypes.bool,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    sameContact: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    const contact = {\n      name,\n      number,\n    };\n\n    e.preventDefault();\n\n    if (this.props.contacts.some(({ number }) => number === contact.number)) {\n      this.setState({ sameContact: true });\n      setTimeout(() => {\n        this.setState({ sameContact: false });\n      }, 500);\n      return;\n    }\n\n    if (validatePhoneNumber(number) === true) {\n      this.setState({ name, number });\n      this.props.addContact(contact);\n      this.reset();\n    } else {\n      alert(\"Enter correct number, please\")\n    }\n\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: ''\n    });\n  }\n\n  render() {\n    const { name, number, sameContact } = this.state;\n    return (\n      <>\n        <div className=\"heading\">\n          <Heading />\n\n          <CSSTransition\n            in={sameContact}\n            timeout={250}\n            classNames={Animation}\n            unmountOnExit\n          >\n            <NotificationNumberExist message=\"The contact is already exists.\" />\n          </CSSTransition>\n        </div>\n        <form className={s.form}\n          onSubmit={this.handleSubmit}\n        >\n          <label className={s.label}>\n            Name\n            <span className={s.star}>&#42;</span>\n            <input\n              className={s.input}\n              type='text'\n              name='name'\n              placeholder='Enter the name'\n              value={name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label className={s.label}>\n            Number<span className={s.star}>&#42;</span>\n            <input\n              className={s.input}\n              type='number'\n              name='number'\n              placeholder='+380'\n              value={number}\n              maxLength=\"13\"\n              onChange={this.handleChange}\n              required\n            />\n            <span className={s.rule}>\n              <span className={s.star}>&#42;</span> - obligatory fields.\n            </span>\n          </label>\n          <button\n            className={s.button}\n            disabled={false}\n            onSubmit={this.checkContact}\n          >\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: selectors.getAllContacts(state),\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: (contact) => dispatch(operations.addContact(contact)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React, { Component } from 'react'\nimport s from './Contacts.module.css'\nimport ContactsAnimation from './ContactsAnimation.module.css'\nimport PropTypes from 'prop-types'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nclass Contacts extends Component {\n  static propTypes = {\n    onDelete: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n  };\n\n  state = {}\n\n  render() {\n    const { contacts, onDelete } = this.props;\n\n    return (<div>\n      <TransitionGroup\n        component=\"ul\"\n        className={s.list}\n      >\n        {contacts.map((elem, id) => (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            classNames={ContactsAnimation}\n          >\n            <li className={s.item} key={id}>\n              {`${elem.name}: ${elem.number}`}\n              <button\n                className={s.button}\n                onClick={() => onDelete(elem.id)}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </div>\n    );\n  };\n};\n\nexport default Contacts;\n","import React from 'react'\nimport s from './Filter.module.css'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport * as selectors from '../../redux/contactsSelectors'\nimport * as action from '../../redux/actions'\n\nconst Filter = ({ initialValue, onFilterChange }) => {\n\n  return (\n    <label className={s.label}>\n      Filter contacts:\n      <input\n        className={s.input}\n        type='text'\n        name='filter'\n        placeholder='Find contacts by name'\n        value={initialValue}\n        onChange={e => onFilterChange(e.target.value)}\n      ></input>\n    </label >\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  initialValue: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onFilterChange: action.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react'\nimport Container from './components/Container'\nimport Form from './components/Form'\nimport Contacts from './components/Contacts'\nimport Filter from './components/Filter'\nimport { connect } from 'react-redux'\n// import * as action from './redux/actions'\nimport * as selectors from './redux/contactsSelectors'\nimport operations from './redux/contactsOperations'\n// import { getAllContacts, getLoading } from './redux/contactsSelectors'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initContacts();\n    // console.log(this.props.initContacts());\n    // const contacts = localStorage.getItem('contacts');\n    // const parsedContacts = JSON.parse(contacts);\n    // if (parsedContacts) this.props.initContacts(parsedContacts);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { contacts: nowContacts } = this.props;\n    const { contacts: prevContacts } = prevProps;\n    if (nowContacts !== prevContacts) {\n\n      // this.props.addContact(contact);\n      //   localStorage.setItem('contacts', JSON.stringify(nowContacts));\n    }\n  }\n\n  filterContacts = e => {\n    this.props.filterContacts(e.target.value);\n  };\n\n  render() {\n    const { contacts, name, number } = this.props;\n    return (\n      <Container>\n        <Form\n          name={name}\n          number={number}\n          contacts={contacts}\n          onChange={this.handleChange}\n          onSubmit={this.checkContact}\n        ></Form>\n\n        <Filter\n          value={this.props.initialValue}\n\n          onChangeFilter={this.props.filter}\n        />\n\n        <Contacts\n          contacts={this.props.contacts}\n          onDelete={this.props.delContact}\n        />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: selectors.getFilteredContacts(state),\n    initialValue: selectors.getFilter(state),\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initContacts: () => dispatch(operations.fetchContacts()),\n    // addContact: (contact) => dispatch(operations.addContact(contact)),\n    delContact: id => dispatch(operations.delContact(id)),\n    // filterContacts: filter => dispatch(action.filter(filter)),\n    // onChange: e => dispatch(operations.filterContacts(e.target.value)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer, combineReducers } from '@reduxjs/toolkit'\r\nimport {\r\n    initContactsRequest,\r\n    initContactsSuccess,\r\n    initContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n    changeFilter,\r\n} from './actions'\r\n\r\nconst initialState = {\r\n    contacts: {\r\n        items: [],\r\n        filter: '',\r\n        error: '',\r\n    },\r\n};\r\n\r\nconst items = createReducer([], {\r\n    [initContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n    [delContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [initContactsRequest]: () => true,\r\n    [initContactsSuccess]: () => false,\r\n    [initContactsError]: () => false,\r\n\r\n    [delContactRequest]: () => true,\r\n    [delContactSuccess]: () => false,\r\n    [delContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport contactsReducer from './contactsReducer'\nimport loading from './contactsReducer'\nimport logger from 'redux-logger'\n\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [\n                FLUSH,\n                REHYDRATE,\n                PAUSE,\n                PERSIST,\n                PURGE,\n                REGISTER\n            ],\n        },\n    }),\n    logger\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    loading,\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3Qixx\",\"item\":\"Contacts_item__3Gc09\",\"button\":\"Contacts_button__20j3y\",\"item-enter\":\"Contacts_item-enter__uOId9\",\"item-enter-active\":\"Contacts_item-enter-active__1gEnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1iqR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__33Fw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__1y3Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"HeadingAnimation_appear__1As8I\",\"appearActive\":\"HeadingAnimation_appearActive__RO5Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"NotificationNumberExist_card__3Y98G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Animation_enter__1eYFa\",\"enterActive\":\"Animation_enterActive__3vwUD\",\"exit\":\"Animation_exit__19gxo\",\"exitActive\":\"Animation_exitActive__q_YRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactsAnimation_enter__1Dv0e\",\"enterActive\":\"ContactsAnimation_enterActive__BTH-g\",\"exit\":\"ContactsAnimation_exit__tqK8g\",\"exitActive\":\"ContactsAnimation_exitActive__2EBa-\"};"],"sourceRoot":""}